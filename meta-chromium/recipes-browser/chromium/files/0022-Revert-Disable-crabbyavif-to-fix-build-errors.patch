From 439515096a0471eb4f917b520910053db9282b63 Mon Sep 17 00:00:00 2001
From: Ariel D'Alessandro <ariel.dalessandro@collabora.com>
Date: Sun, 27 Apr 2025 14:53:52 -0300
Subject: [PATCH] Revert "Disable crabbyavif to fix build errors"

This reverts commit 8ddeb1d67c42175dd2c4cb6cb5de6d864f3abf56.
---
 .../blink/renderer/platform/image-decoders/BUILD.gn | 13 +++++++++++++
 .../platform/image-decoders/image_decoder.cc        | 13 +++++++++----
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/third_party/blink/renderer/platform/image-decoders/BUILD.gn b/third_party/blink/renderer/platform/image-decoders/BUILD.gn
index 1b55546ffa..870c7e8537 100644
--- a/third_party/blink/renderer/platform/image-decoders/BUILD.gn
+++ b/third_party/blink/renderer/platform/image-decoders/BUILD.gn
@@ -77,6 +77,15 @@ component("image_decoders") {
     "//ui/gfx/geometry:geometry_skia",
   ]
 
+  if (enable_av1_decoder) {
+    sources += [
+      "avif/crabbyavif_image_decoder.cc",
+      "avif/crabbyavif_image_decoder.h",
+    ]
+
+    deps += [ "//third_party/crabbyavif" ]
+  }
+
   if (enable_rust_png) {
     sources += [
       "png/skia_png_rust_image_decoder.cc",
@@ -119,4 +128,8 @@ source_set("unit_tests") {
   if (is_win || is_mac || (is_linux && !is_castos)) {
     deps += [ "//ui/base:pixel_diff_test_support" ]
   }
+
+  if (enable_av1_decoder) {
+    sources += [ "avif/crabbyavif_image_decoder_test.cc" ]
+  }
 }
diff --git a/third_party/blink/renderer/platform/image-decoders/image_decoder.cc b/third_party/blink/renderer/platform/image-decoders/image_decoder.cc
index 303669541e..34c1195414 100644
--- a/third_party/blink/renderer/platform/image-decoders/image_decoder.cc
+++ b/third_party/blink/renderer/platform/image-decoders/image_decoder.cc
@@ -37,6 +37,7 @@
 #include "media/media_buildflags.h"
 #include "skia/ext/cicp.h"
 #include "third_party/blink/public/common/buildflags.h"
+#include "third_party/blink/public/common/features.h"
 #include "third_party/blink/public/platform/platform.h"
 #include "third_party/blink/renderer/platform/image-decoders/bmp/bmp_image_decoder.h"
 #include "third_party/blink/renderer/platform/image-decoders/fast_shared_buffer_reader.h"
@@ -50,6 +51,10 @@
 #include "ui/gfx/geometry/size.h"
 #include "ui/gfx/geometry/size_conversions.h"
 
+#if BUILDFLAG(ENABLE_AV1_DECODER)
+#include "third_party/blink/renderer/platform/image-decoders/avif/crabbyavif_image_decoder.h"
+#endif
+
 namespace blink {
 
 namespace {
@@ -192,7 +197,7 @@ String SniffMimeTypeInternal(scoped_refptr<SegmentReader> reader) {
     return "image/bmp";
   }
 #if BUILDFLAG(ENABLE_AV1_DECODER)
-  if (AVIFImageDecoder::MatchesAVIFSignature(fast_reader)) {
+  if (CrabbyAVIFImageDecoder::MatchesAVIFSignature(fast_reader)) {
     return "image/avif";
   }
 #endif
@@ -302,9 +307,9 @@ std::unique_ptr<ImageDecoder> ImageDecoder::CreateByMimeType(
                                                 max_decoded_bytes);
 #if BUILDFLAG(ENABLE_AV1_DECODER)
   } else if (mime_type == "image/avif") {
-    decoder = std::make_unique<AVIFImageDecoder>(
-        alpha_option, high_bit_depth_decoding_option, color_behavior,
-        aux_image, max_decoded_bytes, animation_option);
+    decoder = std::make_unique<CrabbyAVIFImageDecoder>(
+        alpha_option, high_bit_depth_decoding_option, color_behavior, aux_image,
+        max_decoded_bytes, animation_option);
 #endif
   }
 
