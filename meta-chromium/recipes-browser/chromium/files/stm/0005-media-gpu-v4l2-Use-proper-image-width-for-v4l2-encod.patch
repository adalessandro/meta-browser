From 32e4972101f1e895c152ebb635592108565a076f Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Fri, 11 Apr 2025 09:59:23 +0300
Subject: [PATCH] media/gpu/v4l2: Use proper image width for v4l2 encoder
 configuration

---
 .../gpu/v4l2/v4l2_video_encode_accelerator.cc | 29 ++++++++++++++-----
 1 file changed, 22 insertions(+), 7 deletions(-)

diff --git a/media/gpu/v4l2/v4l2_video_encode_accelerator.cc b/media/gpu/v4l2/v4l2_video_encode_accelerator.cc
index 32a0319c9d..d092a189e5 100644
--- a/media/gpu/v4l2/v4l2_video_encode_accelerator.cc
+++ b/media/gpu/v4l2/v4l2_video_encode_accelerator.cc
@@ -364,7 +364,11 @@ void V4L2VideoEncodeAccelerator::InitializeTask(const Config& config) {
     }
 
     const gfx::Size ip_output_buffer_size(
-        static_cast<int>(image_processor_->output_config().planes[0].stride),
+        static_cast<int>(
+            image_processor_->output_config().planes[0].stride /
+            VideoFrame::BytesPerElement(
+                image_processor_->output_config().fourcc.ToVideoPixelFormat(),
+                0)),
         image_processor_->output_config().size.height());
     if (!NegotiateInputFormat(device_input_layout_->format(),
                               ip_output_buffer_size)) {
@@ -975,11 +979,13 @@ bool V4L2VideoEncodeAccelerator::ReconfigureFormatIfNeeded(
   } else if (frame.coded_size() == input_frame_size_) {
     // This path is for the first frame on Encode().
     // Height and width that V4L2VEA needs to configure.
-    const gfx::Size buffer_size(static_cast<int>(frame.stride(0)),
-                                frame.coded_size().height());
+    const gfx::Size buffer_size(
+        static_cast<int>(frame.stride(0) /
+                         VideoFrame::BytesPerElement(frame.format(), 0)),
+        frame.coded_size().height());
 
     // A buffer given by client is allocated with the same dimension using
-    // minigbm. However, it is possible that stride and height are different
+    // minigbm. However, it is possible that width and height are different
     // from ones adjusted by a driver.
     if (!image_processor_) {
       if (device_input_layout_->coded_size().width() == buffer_size.width() &&
@@ -992,7 +998,10 @@ bool V4L2VideoEncodeAccelerator::ReconfigureFormatIfNeeded(
 
     if (image_processor_->input_config().size.height() ==
             buffer_size.height() &&
-        image_processor_->input_config().planes[0].stride ==
+        image_processor_->input_config().planes[0].stride /
+                VideoFrame::BytesPerElement(image_processor_->input_config()
+                                                .fourcc.ToVideoPixelFormat(),
+                                            0) ==
             static_cast<size_t>(buffer_size.width())) {
       return true;
     }
@@ -1012,7 +1021,11 @@ bool V4L2VideoEncodeAccelerator::ReconfigureFormatIfNeeded(
   }
 
   gfx::Size output_size(
-      static_cast<int>(image_processor_->output_config().planes[0].stride),
+      static_cast<int>(
+          image_processor_->output_config().planes[0].stride /
+          VideoFrame::BytesPerElement(
+              image_processor_->output_config().fourcc.ToVideoPixelFormat(),
+              0)),
       image_processor_->output_config().size.height());
   if (output_size != device_input_layout_->coded_size()) {
     LOG(ERROR) << "Image Processor's output buffer's size is different from "
@@ -1954,7 +1967,9 @@ bool V4L2VideoEncodeAccelerator::SetFormats(VideoPixelFormat input_format,
         gfx::BufferUsage::VEA_READ_CAMERA_AND_CPU_READ_WRITE);
     if (!input_layout)
       return false;
-    input_size = gfx::Size(static_cast<int>(input_layout->planes()[0].stride),
+    input_size = gfx::Size(static_cast<int>(input_layout->planes()[0].stride /
+                                            VideoFrame::BytesPerElement(
+                                                input_layout->format(), 0)),
                            input_layout->coded_size().height());
   }
 
